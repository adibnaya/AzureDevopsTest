{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.1008.15138",
        "templateHash": "15087885370738943962"
      }
    },
    "parameters": {
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_Ds1_v2",
        "metadata": {
          "description": "Size of VM"
        }
      },
      "existingVnetName": {
        "type": "string",
        "metadata": {
          "description": "Existing VNET that contains the domain controller"
        }
      },
      "existingSubnetName": {
        "type": "string",
        "metadata": {
          "description": "Existing subnet that contains the domain controller"
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "maxLength": 62,
        "minLength": 1,
        "metadata": {
          "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
        }
      },
      "domainToJoin": {
        "type": "string",
        "metadata": {
          "description": "The FQDN of the AD domain"
        }
      },
      "domainUsername": {
        "type": "string",
        "metadata": {
          "description": "Username of the account on the domain"
        }
      },
      "domainPassword": {
        "type": "secureString",
        "metadata": {
          "description": "Password of the account on the domain"
        }
      },
      "ouPath": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Organizational Unit path in which the nodes and cluster will be present."
        }
      },
      "domainJoinOptions": {
        "type": "int",
        "defaultValue": 3,
        "metadata": {
          "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "The name of the administrator of the new VM."
        }
      },
      "adminPassword": {
        "type": "secureString",
        "metadata": {
          "description": "The password for the administrator account of the new VM."
        }
      },
      "storageAccountName": {
        "type": "string",
        "defaultValue": "[uniqueString(resourceGroup().id, deployment().name)]",
        "metadata": {
          "description": "The name of the storage account."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "functions": [],
    "variables": {
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "windowsOSVersion": "2019-Datacenter",
      "nicName": [
        "[format('{0}-nic1', parameters('dnsLabelPrefix'))]",
        "[format('{0}-nic2', parameters('dnsLabelPrefix'))]"
      ]
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[parameters('storageAccountName')]",
        "location": "[parameters('location')]",
        "kind": "StorageV2",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "copy": {
          "name": "nic",
          "count": "[length(range(0, 2))]"
        },
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-11-01",
        "name": "[variables('nicName')[range(0, 2)[copyIndex()]]]",
        "location": "[parameters('location')]",
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "copy": {
          "name": "virtualMachine",
          "count": "[length(range(0, 2))]"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2021-03-01",
        "name": "[format('dnsLabelPrefix{0}', add(range(0, 2)[copyIndex()], 1))]",
        "location": "[parameters('location')]",
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "computerName": "[format('memberserver{0}', add(range(0, 2)[copyIndex()], 1))]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[format('{0}-OsDisk{1}', parameters('dnsLabelPrefix'), add(range(0, 2)[copyIndex()], 1))]",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "name": "[format('{0}-DataDisk{1}', parameters('dnsLabelPrefix'), add(range(0, 2)[copyIndex()], 1))]",
                "caching": "None",
                "createOption": "Empty",
                "diskSizeGB": 1024,
                "lun": 0
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName')[range(0, 2)[range(0, 2)[copyIndex()]]])]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.blob]"
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName')[range(0, 2)[range(0, 2)[copyIndex()]]])]",
          "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
        ]
      },
      {
        "copy": {
          "name": "virtualMachineExtension",
          "count": "[length(range(0, 2))]"
        },
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2021-03-01",
        "name": "[format('{0}/{1}', format('dnsLabelPrefix{0}', add(range(0, 2)[range(0, 2)[copyIndex()]], 1)), 'joindomain')]",
        "location": "[parameters('location')]",
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "JsonADDomainExtension",
          "typeHandlerVersion": "1.3",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "name": "[parameters('domainToJoin')]",
            "ouPath": "[parameters('ouPath')]",
            "user": "[format('{0}\\{1}', parameters('domainToJoin'), parameters('domainUsername'))]",
            "restart": true,
            "options": "[parameters('domainJoinOptions')]"
          },
          "protectedSettings": {
            "Password": "[parameters('domainPassword')]"
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines', format('dnsLabelPrefix{0}', add(range(0, 2)[range(0, 2)[copyIndex()]], 1)))]"
        ]
      }
    ]
  }